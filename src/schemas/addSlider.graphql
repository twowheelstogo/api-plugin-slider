"Input for `addSlider` mutation"
input AddSliderInput {
  "An optional string identifying the mutation call, which will be returned in the response payload"
  clientMutationId: String

  "Title to display to customers"
  displayTitle: String

  "Hero media URL"
  heroMediaUrl: String

  "Whether the slider is visible"
  isVisible: Boolean!

  "Slider metafields"
  metafields: [MetafieldInput]

  "Unique name of the slider"
  name: String!

  "The shop that owns the slider"
  shopId: ID!

  "The slider slug. If left blank, the name will be slugified and saved as the slug"
  slug: String
}

"Response payload for `addSlider` mutation"
type AddSliderPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The shop that owns the slider"
  shopId: ID!

  "The newly-created slider"
  slider: Slider!
}

extend type Mutation {
  "Adds a new slider"
  addSlider(
    "Mutation input"
    input: AddSliderInput!
  ): AddSliderPayload!
}
